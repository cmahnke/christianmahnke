{{- $pages := where .Site.RegularPages "Params.displayinlist" "!=" false -}}
{{- $pageList := slice -}}
{{- $sameAs := dict -}}
{{- range $page := $pages -}}
  {{- $pageUrl := .RelPermalink -}}
  {{- with .OutputFormats.Get "html" -}}
    {{- $pageUrl = .RelPermalink -}}
  {{- end -}}
  {{- $title := .Title -}}
  {{- $urls := slice -}}
  {{- range $tag := .Params.tags -}}
    {{- if ne $tag "" -}}
      {{- $tagUrl := printf "%s%s" ("tags/" | relLangURL) ($tag | urlize) -}}
      {{- $links := slice -}}
      {{- with $.Site.GetPage $tagUrl -}}
        {{- if .Params.wikidata -}}
          {{- $links = .Params.wikidata -}}
          {{- if not (reflect.IsSlice .Params.wikidata) -}}
            {{- $links = slice .Params.wikidata -}}
            {{- $sameAs = merge $sameAs (dict .RelPermalink .Params.wikidata) -}}
          {{- end -}}
        {{- end -}}
      {{- end -}}
      {{- $urls = $urls | union $links -}}
    {{- end -}}
  {{- end -}}

  {{- with .Content -}}
    {{- $regex := `data-wikidata-entity="(.+?)"` -}}
    {{- $matches := findRESubmatch $regex . -}}
    {{- range $matches -}}
      {{- $entity := (index . 1) -}}
      {{- if not (hasPrefix $entity "http") -}}
        {{- $entity = printf "https://www.wikidata.org/wiki/%s" $entity -}}
      {{- end -}}
      {{- $urls = $urls | union (slice $entity) -}}
    {{- end -}}
  {{- end -}}

  {{- if .Params.wikidata -}}
    {{- $links := .Params.wikidata -}}
    {{- if not (reflect.IsSlice .Params.wikidata) -}}
      {{- $links = slice .Params.wikidata -}}
    {{- end -}}
    {{- $urls = $urls | union $links -}}
  {{- end -}}

  {{- if gt (len $urls) 0  -}}
    {{- $pageList = $pageList | append (dict "url" $pageUrl "title" $title "wikidata" $urls) -}}
  {{- end -}}
{{- end -}}
{{- dict "pages" $pageList "tags" $sameAs | jsonify -}}
